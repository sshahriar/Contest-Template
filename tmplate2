#include <bits/stdc++.h>

using namespace std ;

#define M 300000
#define inf 1<<30
#define sz(x ) x.size()
#define mem(x ,y) memset(x , y , sizeof x )
#define all(a ) a.begin() , a.end()
#define forn(i,a,n ) for(int  i = a ; i <= n ; i++ )
#define rep(i ,n ) for(int i = 0 ; i < n ; i++ )
#define repi(i ,n ) for(int i = 1 ; i <= n ; i++ )

#define si(a) scanf("%d",&a )
#define sl(a) scanf("%I64d",&a )
#define sd(a) scanf("%lf" , &a)
#define sii(a , b) scanf("%d %d",&a , &b )
#define sll(a , b) scanf("%I64d %I64d",&a , &b )
#define sdd(a , b) scanf("%lf %lf" , &a ,&b )
#define siii(a , b ,c) scanf("%d %d %d",&a ,&b ,&c )
#define slll(a , b ,c ) scanf("%I64d %I64d %I64d",&a ,&b ,&c )
#define sddd(a ,b ,c) scanf("%lf %lf %lf" , &a , &b ,&c )
#define pi(a) printf("%d\n" ,a)
#define pii(a, b) printf("%d %d\n" , a,b )
#define piii(a, b,c) printf("%d %d %d\n" , a,b ,c  )
#define pl(a ) printf("%I64d\n" ,a ) ;
#define pll(a,b  ) printf("%I64d %I64d\n" ,a ,b  ) ;
#define plll(a ,b ,c) printf("%I64d %I64d %I64d \n" ,a ,b ,c  ) ;

#define lowb(x ,y) lower_bound(all(x  ) , y ) - x.begin()
#define uperb(x, y) upper_bound(all(x) ,y )-x.begin()
#define dbgarr(x,y ) rep(i,y ) cerr << x[i] <<' ' ;  cerr << "\n";
#define dbg(args...) do { cerr << #args << " -> " ;   print(args); } while(0); cerr<< endl;

typedef long long ll ;
typedef unsigned long long ull ;

int sett(int n, int pos  ) { return n = n|(1<< pos) ; }
int reset(int n,int pos ) {  return n =  n & ~(1<<pos ); }
bool check(int n,int pos ) { return (bool ) (n& (1<<pos))  ; }

//int dx[] = { -1 ,+1, 0 , 0 , -1 , -1  , 1 , 1 };
//int dy[] = { 0 , 0, +1, -1  , +1 , -1 , 1 , -1 };

//int dx[] = { 1 , 1, 2 , 2  , -1 , -1 , -2 , -2 };
//int dy[] = { 2 , -2, +1, -1 ,2 , -2 , 1 , -1 };

//debug  extensions
template< typename T >
void print(const T& v) {
    cerr << v << ' ' ;
}

template< typename T1, typename... T2 >
void print( const T1& first, const T2&... rest ){
    print(first);
    print(rest...) ;
}

template< typename T >
ostream &operator<<(ostream &os, const vector<T> &v){
    rep(i ,sz(v ) ) cerr << v[i] <<' ' ;
    cerr<<endl;
}

template< typename T >
ostream &operator<<(ostream &os, const pair<T,T> &v){
    cerr<< v.ff << ' ' << v.ss << endl ;
}

//  code from here

int a[M+2] ;

int main()
{
    //ios_base :: sync_with_stdio(false ) ;  cin.tie(0) ;
    //freopen("in.txt", "r",stdin );
    // freopen("out.txt", "w",stdout );

    int tc ,qr, cs = 0 , k ;




    return 0;

}


